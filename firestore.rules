rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Admin-only collections
    match /admins/{adminId} {
      allow read, write: if request.auth != null && request.auth.uid == adminId;
    }

    match /treatments/{treatmentId} {
      allow read;
      allow create, update, delete: if request.auth != null && get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.isAdmin == true;
    }
    
    match /products/{productId} {
      allow read;
      allow create, update, delete: if request.auth != null && get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.isAdmin == true;
    }
    
    match /testimonials/{testimonialId} {
      allow read;
      allow create, update, delete: if request.auth != null && get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.isAdmin == true;
    }
    
     match /videos/{videoId} {
      allow read: if request.auth == null || request.auth != null;
      allow create, update, delete: if request.auth != null && get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.isAdmin == true;
    }
    
    match /categories/{categoryId} {
       allow read: if request.auth == null || request.auth != null;
       allow create, update, delete: if request.auth != null && get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Appointment booking
    match /appointments/{appointmentId} {
      // Patients can create their own appointments
      allow create: if request.auth != null && request.auth.uid == request.resource.data.patientId;
      
      // Admins can read, update (status), and delete any appointment
      allow read, update, delete: if request.auth != null && get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.isAdmin == true;
      
      // Patients should be able to view their own appointments (future feature)
      allow read: if request.auth != null && request.auth.uid == resource.data.patientId;
    }
  }
}
