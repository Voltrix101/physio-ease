
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.isAdmin == true;
    }

    // Publicly readable collections
    match /(treatments|products|videos)/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Appointments can be created by any authenticated user,
    // but only read/updated by an admin.
    match /appointments/{appointmentId} {
      allow create: if request.auth != null;
      allow read, update, delete: if isAdmin();
    }

    // Admins collection (for role-based access control)
    match /admins/{userId} {
      allow read: if isAdmin();
      // You would typically set admin roles manually in the Firebase console
      // or through a trusted server-side process, so writes are locked down.
      allow write: if false;
    }
  }
}
