rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.isAdmin == true;
    }

    match /admins/{adminId} {
      allow read: if request.auth != null;
      allow write: if false; // Admins collection is read-only for clients
    }

    match /appointments/{appointmentId} {
      // Allow create if the user is logged in AND the patientId in the new document matches their own UID.
      allow create: if request.auth != null && request.resource.data.patientId == request.auth.uid;
      allow read: if request.auth.uid == resource.data.patientId || isAdmin();
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }
    
    match /treatments/{treatmentId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /videos/{videoId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /testimonials/{testimonialId} {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
}
